dnl   Copyright (c) 2008 by Jochen Roessner <jochen@lugrot.de>
dnl   This program is free software; you can redistribute it and/or modify
dnl   it under the terms of the GNU General Public License version 2 or later
dnl   as published by the Free Software Foundation.
dnl  
dnl   This program is distributed in the hope that it will be useful,
dnl   but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl   GNU General Public License for more details.
dnl  
dnl   You should have received a copy of the GNU General Public License
dnl   along with this program; if not, write to the Free Software
dnl   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
dnl  
dnl   For more information on the GPL, please go to:
dnl   http://www.gnu.org/copyleft/gpl.html
dnl

enum sensor { Kessel,Vorlauf,Wasser,WasserRuecklauf,WasserZulauf,AussenNord,Ruecklauf,Ofen };

C6_HEADER(`/* This will be in control6.h */')

CLOCK_USED()

uint8_t menu_active = 0;
uint16_t onewire_temp1 = 0;
uint16_t onewire_temp2 = 0;
uint16_t onewire_temp3 = 0;

CONTROL_START

ECMD_GLOBAL(temp_wert, 20)
ECMD_GLOBAL(Testflag, 1);
ECMD_GLOBAL(EinWert, 8);

THREAD(update_var)
	if (menu_active == 0)
	{
dnl	WAIT(2)
	TTY_SELECT(wert)
	TTY_HOME()
dnl	onewire_temp1 = ONEWIRE_READ(1030c5c8000000c3);
	TTY_WRITE(`"T:%2d.%1dC"', (onewire_temp1/10), (onewire_temp1%10))

dnl	TTY_SELECT(wert2)
dnl	TTY_HOME()
dnl	onewire_temp2 = ONEWIRE_READ(2830c5b80000008e);
dnl	TTY_WRITE(`"T2: %2d.%1d Grad"', (onewire_temp2/10), (onewire_temp2%10))

dnl	TTY_SELECT(wert3)
dnl	TTY_HOME()
dnl	onewire_temp3 = ONEWIRE_READ(2230c5b800000005);
dnl	TTY_WRITE(`"T3: %2d.%1d Grad"', (onewire_temp3/10), (onewire_temp3%10))

dnl	ONEWIRE_CONVERT();
	}
dnl	UDP_DIRECT_SEND(192.168.101.131, 27101, 2701, `"T:%2d C -=- EinWert:%d\n"', temp_wert, EinWert)
dnl	UDP_DIRECT_SEND(192.168.101.131, 27101, 2701, `"help\n"')
dnl	SYSLOG(`"EinWert:%d\n"', EinWert)
	WAIT(1)
THREAD_END(update_var)

THREAD(update_clock)
	if (menu_active == 0)
	{
	TTY_SELECT(clock)
	TTY_HOME()
	TTY_WRITE_TIME()
	}
	WAIT(1)
THREAD_END(update_clock)


MENU(COLS, 0, 0, "***  Menu  ***",
        MENUITEM("Testitem A")
        MENUEDIT_BOOL("Testflag", Testflag)
        MENUEDIT_INT("Integer-Test", EinWert, 5, 23)
	MENUITEM("Exit")
)

UNLESS MENU_STARTED() DO
	menu_active = 0;
        ON TTY_GETCH() == 10 DO
		menu_active = 1;
                MENU_START()
        END
END


ON STARTUP DO
        TTY_CLEAR()
        TTY_WRITE("Thermo-Control")

	TTY_CREATE_WINDOW(clock, 1, 8, 1, COLS - 8)
	THREAD_START(update_clock)
	TTY_CREATE_WINDOW(wert, 1, COLS, 1, 0)
	TTY_CREATE_WINDOW(wert2, 1, COLS, 2, 0)
	TTY_CREATE_WINDOW(wert3, 1, COLS, 3, 0)

	THREAD_START(update_var)
END 


dnl // dnl ist der kommentar fuer m4. Zum aktivieren der beispiele einfach das dnl entfernen.

dnl  // dieses Beispiel zeigt anhand meiner Heizungssteuerung wie man zeitverzoegert die Wasserheizung
dnl  // schaltet. Das geschieht bei einer Temperatur groesser als 55,0 Grad und nur zwischen 6 und 11 Uhr 
dnl  THREAD(warmwasser_high)
dnl      WAIT(60 * 15);
dnl      PIN_SET(Warmwasser);
dnl      THREAD_WAIT(warmwasser_high);
dnl  THREAD_END(warmwasser_high)
dnl  ON ONCE CLOCK_MIN && ( CLOCK_HOUR > 11 || CLOCK_HOUR < 6 ) && KTY_GET(Wasser) > 550 DO THREAD_START(warmwasser_high) END

dnl  // das Beispiel zeigt wie man sofort (einmal in der Minute) auf auf die Wassertemperatur reagiert und schaltet
dnl  // der Pinname "Warmwasser" stammt aus der Konfig vom named_pin
dnl  ON ONCE CLOCK_MIN && CLOCK_HOUR > 6 && CLOCK_HOUR < 19 && KTY_GET(Wasser) < 400 DO
dnl    PIN_CLEAR(Warmwasser);
dnl  END

dnl  // ein Thread der in einer Endlosschleife mit 5 Sekunden Verzoegerung laeuft 
dnl  // definiert eine globale Variable
dnl  GLOBAL(lastzulauf, uint16_t);
dnl  THREAD(zulauf)
dnl    ON ADC_GET(WasserZulauf) < (lastzulauf - 1) DO
dnl      //sendet ein ecmd an ein anderes ethersex
dnl      UESEND(2001:6f8:1209:0:0:0:0:e6, "pumpe 0 1 0\n");
dnl      WAIT(120);
dnl      UESEND(2001:6f8:1209:0:0:0:0:e6, "pumpe 0 0 0\n");
dnl      lastzulauf = ADC_GET(WasserZulauf);
dnl    END
dnl    ON ADC_GET(4) > lastzulauf DO
dnl	lastzulauf = ADC_GET(WasserZulauf);
dnl    END
dnl    WAIT(5)
dnl  THREAD_END(zulauf)

dnl  ON STARTUP DO
dnl      THREAD_START(zulauf);
dnl  END

dnl  // schaltet morgens um 6 Uhr die Heizung ein wenn es draussen weniger als 3 Grad hat
dnl  ON ONCE CLOCK_MIN == 0 && CLOCK_HOUR == 6 && KTY_GET(AussenNord) < 30 DO
dnl    PIN_CLEAR(Heizung);
dnl  END

dnl  // reagiert sofort auf eine fallende Flanke am Eingangspin
dnl  ON PIN_FALLING(Heizzirkulationspumpe) DO
dnl    UESEND(2001:6f8:1209:0:0:0:0:e6, "pumpe 1 1 0\n");
dnl  END
dnl  ON PIN_RISING(Heizzirkulationspumpe) DO
dnl    UESEND(2001:6f8:1209:0:0:0:0:e6, "pumpe 1 0 0\n");
dnl  END
dnl  // alle 10 Minuten wird geprueft ob der Pin low ist und ggf ein ecmd gesendet
dnl  ON ONCE CLOCK_MIN % 10 == 0 DO
dnl    ON PIN_LOW(Heizzirkulationspumpe) DO
dnl      UESEND(2001:6f8:1209:0:0:0:0:e6, "pumpe 1 1 0\n");
dnl    END
dnl  END

dnl THREAD(isdn)
dnl // wartet auf einen Anruf vom isdn und laeuft dann weiter
dnl // in CALLER() ist die Anrufernummer und in CALLEE() die MSN
dnl   WAITCALL()
dnl   SYSLOG("C6 wait call %s to %s\n", CALLER(), CALLEE())

dnl // wartet auf einen Anruf von 09868932945 auf der MSN 932913 und
dnl // laeuft dann weiter, wobei die MSN auch weggelassen werden kann
dnl // in CALLER() ist die Anrufernummer und in CALLEE() die MSN
dnl   WAITCALL_FROM("9868932945","932913")
dnl   SYSLOG("C6 wait call from %s to %s\n", CALLER(), CALLEE())
dnl THREAD_END(isdn);

dnl    ON STARTUP DO
dnl      GUI_SELECT_SCENE(myscene);
dnl    END

dnl // fuehrt den syslog aus sobald ein Anruf vom isdn gemeldet wird
dnl ON IFCALL() DO
dnl   SYSLOG("C6 if call from %s to %s\n", isdn_psb2186_callback_caller, isdn_psb2186_callback_callee)
dnl END

dnl // eine globale Variable fuer ecmd verwendet man so
dnl ECMD_GLOBAL(Wassersoll, 20);
dnl ECMD_GLOBAL(Raumsoll, 20);
dnl ON Wassersoll > 30 DO
dnl   Wassersoll = 30;
dnl END
dnl // die ecmd syntax ist "c6 get Wassersoll" oder "c6 set Wassersoll 255"
dnl // die werte koennen von 0 bis 255 gehen.


CONTROL_END

